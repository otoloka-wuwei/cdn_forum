{"ast":null,"code":"import useCancellablePromises from './cancellablePromiseHook';\nimport CancellablePromise from '../utils/cancellablePromise';\nimport { delay } from '../utils';\n\nfunction useClickPreventionOnDoubleClick(onClick, onDoubleClick) {\n  const api = useCancellablePromises();\n\n  const handleStartTouch = event => {\n    if (api.hasPendingPromise()) {\n      api.clearPendingPromises();\n      onDoubleClick(event);\n    } else {\n      api.clearPendingPromises();\n      const waitForClick = new CancellablePromise(delay(300));\n      api.appendPendingPromise(waitForClick);\n      return waitForClick.promise.then(() => {\n        api.removePendingPromise(waitForClick);\n        onClick(event);\n      }).catch(errorInfo => {\n        api.removePendingPromise(waitForClick);\n\n        if (!errorInfo.isCanceled) {\n          throw errorInfo.error;\n        }\n      });\n    }\n  };\n\n  return [handleStartTouch];\n}\n\nexport default useClickPreventionOnDoubleClick;","map":null,"metadata":{},"sourceType":"module"}