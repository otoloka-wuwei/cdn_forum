{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"D:\\\\otoProject\\\\workspace\\\\otoloka-mobile-forum\\\\pages\\\\_app.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styles from '../app.module.scss';\nimport '../index.scss';\nimport App from 'next/app';\nimport Store from '../store';\nimport { Provider, observer } from 'mobx-react';\nimport 'mobx-react-lite/batchingForReactDom';\nimport Head from 'next/head';\nimport MessageBox from '../components/message-box';\nimport { VisibilityChangeSubject } from '../subject/visibility';\nimport ToastBox from '../components/toast-box';\nimport postMessageToApp from '../util/bridge';\n\nlet CustomApp = observer(_class = (_temp = class CustomApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: new Store()\n    };\n    this.hidden = '';\n    this.visibilityChange = '';\n  }\n\n  componentDidMount() {\n    if (false) {\n      const isApp = !!window.ReactNativeWebView;\n\n      if (isApp) {\n        window.getUserInfo = () => {\n          this.state.store.getUserInfo();\n        };\n\n        postMessageToApp({\n          action: 'getToken'\n        }).then(token => {\n          localStorage.setItem('token', token);\n          this.state.store.getUserInfo();\n        });\n      } else {\n        this.state.store.getUserInfo();\n      }\n\n      if (typeof document.hidden !== 'undefined') {\n        this.hidden = 'hidden';\n        this.visibilityChange = 'visibilitychange';\n      } else if (typeof document.msHidden !== 'undefined') {\n        this.hidden = 'msHidden';\n        this.visibilityChange = 'msvisibilitychange';\n      } else if (typeof document.webkitHidden !== 'undefined') {\n        this.hidden = 'webkitHidden';\n        this.visibilityChange = 'webkitvisibilitychange';\n      }\n\n      if (typeof document.addEventListener === 'undefined' || typeof document[this.hidden] === 'undefined') {\n        console.warn('This demo requires a browser, such as Google Chrome or Firefox, that supports the Page Visibility API.');\n      } else {\n        document.addEventListener(this.visibilityChange, this.handleVisibilityChange.bind(this), false);\n      }\n    }\n  }\n\n  handleVisibilityChange() {\n    VisibilityChangeSubject.next(document[this.hidden]);\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"OTOLOKA\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no,viewport-fit=cover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), __jsx(Provider, {\n      store: this.state.store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(\"main\", {\n      id: \"mainbody\",\n      className: styles['main'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }))), this.state.store.isMessageBoxShow ? __jsx(MessageBox, {\n      type: this.state.store.messageBoxType,\n      title: this.state.store.messageBoxTitle,\n      message: this.state.store.messageBoxMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }) : null, this.state.store.isToastBoxShow ? __jsx(ToastBox, {\n      type: this.state.store.toastBoxType,\n      message: this.state.store.toastBoxMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }) : null));\n  }\n\n}, _temp)) || _class;\n\nexport default CustomApp;","map":null,"metadata":{},"sourceType":"module"}