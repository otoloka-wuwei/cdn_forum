{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _temp;\n\nimport { action, observable } from 'mobx';\nimport { useStaticRendering } from 'mobx-react';\nimport HttpClient from '../http/HttpClient';\nconst isServer = false;\nuseStaticRendering(isServer);\nconst emptyUser = {\n  userId: -1,\n  nickname: '',\n  gender: -1,\n  headPortrait: '',\n  email: ''\n};\nlet Store = (_class = (_temp = class Store {\n  constructor(initialState = {}) {\n    _initializerDefineProperty(this, \"user\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"messageBoxType\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"messageBoxTitle\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"messageBoxMessage\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"isMessageBoxShow\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"toastBoxType\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"toastBoxMessage\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"isToastBoxShow\", _descriptor8, this);\n\n    if (initialState) {\n      Object.keys(initialState).filter(key => typeof initialState[key] !== 'undefined' && typeof this[key] !== 'undefined').forEach(key => this[key] = initialState[key]);\n    }\n  }\n\n  showLoginModal() {\n    if (window.ReactNativeWebView) {\n      try {\n        window.ReactNativeWebView.postMessage(JSON.stringify({\n          action: 'gotoLogin'\n        }));\n      } catch (e) {}\n    }\n  }\n\n  getUserInfo() {\n    if (localStorage.getItem('token')) {\n      this.user = emptyUser;\n      HttpClient.get('/web/user/index.json').then(resp => {\n        const {\n          user,\n          googleInfo,\n          facebookInfo\n        } = resp.data;\n\n        if (typeof googleInfo !== 'undefined') {\n          user.googleEmail = googleInfo.email;\n          user.googleName = googleInfo.displayName;\n        }\n\n        if (typeof facebookInfo !== 'undefined') {\n          user.facebookEmail = facebookInfo.email;\n          user.facebookName = facebookInfo.name;\n        }\n\n        return Promise.resolve(user);\n      }).then(user => this.user = user).catch(error => {\n        console.error(error);\n        this.user = null;\n        localStorage.removeItem('token');\n      });\n    } else {\n      this.user = null;\n    }\n  }\n\n  showMessageBox(type, title, message) {\n    this.messageBoxType = type;\n    this.messageBoxTitle = title;\n    this.messageBoxMessage = message;\n    this.isMessageBoxShow = true;\n  }\n\n  hideMessageBox() {\n    this.isMessageBoxShow = false;\n  }\n\n  showToastBox(type, message) {\n    this.toastBoxType = type;\n    this.toastBoxMessage = message;\n    this.isToastBoxShow = true;\n  }\n\n  hideToastBox() {\n    this.isToastBoxShow = false;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"user\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"messageBoxType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 'success';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"messageBoxTitle\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"messageBoxMessage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"isMessageBoxShow\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"toastBoxType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"toastBoxMessage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"isToastBoxShow\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"showLoginModal\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"showLoginModal\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getUserInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getUserInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"showMessageBox\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"showMessageBox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"hideMessageBox\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"hideMessageBox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"showToastBox\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"showToastBox\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"hideToastBox\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"hideToastBox\"), _class.prototype)), _class);\nlet store = null;\nexport function initializeStore(initialState = {}) {\n  if (isServer) {\n    return new Store(initialState);\n  }\n\n  if (store === null) {\n    store = new Store(initialState);\n  }\n\n  return store;\n}\nexport default Store;","map":null,"metadata":{},"sourceType":"module"}