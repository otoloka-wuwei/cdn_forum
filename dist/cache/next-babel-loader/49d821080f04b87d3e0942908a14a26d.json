{"ast":null,"code":"var _jsxFileName = \"D:\\\\otoProject\\\\workspace\\\\otoloka-mobile-forum\\\\pages\\\\comment\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport styles from './index.module.scss';\nimport CommentItem from '../../components/comment-item';\nimport { CommentInputSubject } from '../../subject/comment';\nimport CommentInput from '../../components/comment-input';\nimport DetailService from '../../services/detail';\nimport { useObserver, MobXProviderContext } from 'mobx-react';\nimport useMessageBox from '../../hooks/messageBoxHooks';\nimport ScrollContainer from '../../components/scroll-container';\nimport { DomChangeSubject } from '../../subject/dom';\n\nconst CommentPage = ({\n  articleId\n}) => {\n  const showMessageBox = useMessageBox();\n  const {\n    0: commentList,\n    1: setCommentList\n  } = useState(Array.from({\n    length: 10\n  }));\n  const commentListRef = useRef(commentList);\n  const pageSize = 10;\n  const pageNum = useRef(1);\n  const {\n    0: isFocus,\n    1: setIsFocus\n  } = useState(false);\n  const {\n    0: commentPlaceHolderText,\n    1: setCommentPlaceHolder\n  } = useState(\"Isi Thread ...\");\n  const service = new DetailService();\n  const isCommentSubmit = useRef(false);\n  const {\n    0: inputValue,\n    1: setInputValue\n  } = useState('');\n  const beReplyData = useRef();\n  const {\n    0: isReply,\n    1: setIsReply\n  } = useState(false);\n  const {\n    store\n  } = useContext(MobXProviderContext);\n  const {\n    user\n  } = useObserver(() => ({\n    user: store.user\n  }));\n  const {\n    0: isApp,\n    1: setIsApp\n  } = useState(true);\n  const {\n    0: canPullUp,\n    1: setCanPullUp\n  } = useState(false);\n  useEffect(() => {\n    const isApp = !!window.ReactNativeWebView;\n    setIsApp(isApp);\n    getCommentData();\n    const commentSubscription = CommentInputSubject.subscribe(({\n      action,\n      messageData\n    }) => {\n      if (action === 'blur') {\n        setIsFocus(false);\n      } else {\n        if (action === \"reply\") {\n          setIsFocus(true);\n          setIsReply(true);\n          beReplyData.current = messageData;\n          setCommentPlaceHolder(\"Balas \" + messageData.messageUserName);\n        } else if (action === 'delete-comment') {\n          setIsFocus(false);\n          deleteComment(messageData.id, messageData.content);\n        } else if (action === 'delete-reply') {\n          setIsFocus(false);\n        }\n      }\n    });\n    return () => {\n      commentSubscription.unsubscribe();\n    };\n  }, []); //新增一条评论\n\n  const addComment = commentItem => {\n    setCommentList(commentList => [...commentList, commentItem]);\n  }; //删除评论\n\n\n  const deleteComment = (commentId, content) => {\n    setCommentList(commentList => commentList.filter(item => {\n      if (item.id === commentId) {\n        item.content = content;\n        item.status = 2;\n        return item;\n      } else {\n        return item;\n      }\n    }));\n  };\n\n  const getCommentData = () => {\n    return service.getFirstMessagesList(articleId, pageNum.current, pageSize).then(({\n      total,\n      list\n    }) => {\n      commentListRef.current = list;\n      setCommentList(commentListRef.current);\n      setCanPullUp(pageSize * pageNum.current < total);\n      DomChangeSubject.next();\n    });\n  };\n\n  const handelBlur = () => {\n    setIsFocus(false);\n  }; //提交评论\n\n\n  const handleSubmitComment = event => {\n    const inputDetail = event.detail;\n\n    if (!user || user.userId <= 0 || !localStorage.getItem(\"token\")) {\n      store.showLoginModal();\n      return;\n    }\n\n    if (isCommentSubmit.current === false) {\n      isCommentSubmit.current = true;\n      let submitModel;\n\n      if (isReply) {\n        submitModel = {\n          articleId: articleId,\n          content: inputDetail,\n          messageUserid: user.userId,\n          parentMessageId: beReplyData.current.parentMessageId,\n          parentMessageUserid: beReplyData.current.parentMessageUserid,\n          beMessageUserid: beReplyData.current.messageUserid\n        };\n      } else {\n        submitModel = {\n          articleId: articleId,\n          content: inputDetail,\n          messageUserid: user.userId\n        };\n      }\n\n      service.leavingMessage(submitModel).then(result => {\n        isCommentSubmit.current = false;\n        setInputValue(\"\");\n        result.messageUserHeadUrl = user.headPortrait;\n        result.messageUserName = user.nickname;\n\n        if (isReply) {\n          showMessageBox('success', 'success', 'Berhasil balas!');\n          result.beMessageUserName = beReplyData.current.messageUserName;\n          CommentInputSubject.next({\n            action: 'refresh-reply',\n            messageData: result\n          }); //刷新二级评论列表\n        } else {\n          showMessageBox('success', 'success', 'Komentar berhasil!');\n          addComment(result);\n        }\n\n        setIsReply(false);\n        setIsFocus(false);\n      }).catch(error => {\n        console.error(error);\n        isCommentSubmit.current = false;\n        showMessageBox('error', 'error', error.message || 'Komentar gagal！');\n      });\n    }\n\n    ;\n  };\n\n  const backToIndex = () => {\n    if (isApp) {\n      window.ReactNativeWebView.postMessage(JSON.stringify({\n        action: 'goBack'\n      }));\n    } else {\n      window.history.go(-1);\n    }\n  };\n\n  const handlePullDownRefresh = scroll => {\n    setCommentList(Array.from({\n      length: 10\n    }));\n    pageNum.current = 1;\n    return getCommentData();\n  };\n\n  const handlePullUpAppendData = scroll => {\n    pageNum.current += 1;\n    setCommentList(articleList => [...articleList, ...Array.from({\n      length: 10\n    })]);\n    scroll.refresh();\n    return service.getFirstMessagesList(articleId, pageNum.current, pageSize).then(({\n      total,\n      list\n    }) => {\n      setCommentList(currentArticleList => [...currentArticleList.filter(item => item), ...list]);\n\n      if (pageSize * pageNum.current >= total) {\n        setCanPullUp(false);\n      }\n\n      DomChangeSubject.next();\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: styles['comment-page-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles['comment-header'],\n    onClick: backToIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: `icon-font uniE906 ${styles['icon-close']}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles['comment-wrapper'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, __jsx(ScrollContainer, {\n    onPullDown: handlePullDownRefresh,\n    onPullUp: handlePullUpAppendData,\n    pullUp: canPullUp,\n    observeDOM: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: styles['comment-list-content'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, commentList.map((item, index) => __jsx(\"li\", {\n    className: styles['comment-item'],\n    key: item ? item.id + 99899 : index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, __jsx(CommentItem, {\n    data: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }))))), isFocus ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: styles['comment-input-overlay'],\n    onClick: handelBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: styles['comment-input-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, __jsx(CommentInput, {\n    inputText: inputValue,\n    isFocused: isFocus,\n    placeHolder: commentPlaceHolderText,\n    onSubmit: handleSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }))) : null));\n};\n\nexport var __N_SSP = true;\nexport default CommentPage;","map":null,"metadata":{},"sourceType":"module"}