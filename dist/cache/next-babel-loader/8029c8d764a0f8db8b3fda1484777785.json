{"ast":null,"code":"var _jsxFileName = \"D:\\\\otoProject\\\\workspace\\\\otoloka-mobile-forum\\\\components\\\\publish-image-picker\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styles from './index.module.scss';\nimport { ImagePicker } from 'antd-mobile';\n\nconst PublishImagePicker = ({\n  onChange,\n  onClickImgItem,\n  imageList\n}) => {\n  const {\n    0: isApp,\n    1: setIsApp\n  } = useState(true);\n  const {\n    0: photoList,\n    1: setPhotoList\n  } = useState([]);\n  useEffect(() => {\n    const isApp = !!window.ReactNativeWebView;\n    setIsApp(isApp);\n\n    window.setPhotoList = photoList => {\n      photoList = photoList.map(item => {\n        return {\n          uri: item.uri,\n          url: item.url,\n          filename: item.filename,\n          headUrl: item.headUrl,\n          type: item.type === 'photo' ? 1 : 2,\n          active: false,\n          width: item.width,\n          height: item.height\n        };\n      });\n      setPhotoList(photoList);\n\n      if (typeof onChange === 'function') {\n        onChange(photoList.map(item => item));\n      }\n    };\n  }, []);\n  useEffect(() => {\n    setPhotoList(imageList);\n  }, [imageList]);\n\n  const changeImgList = (files, type, index) => {\n    if (typeof onChange === 'function') {\n      onChange(files);\n    }\n  };\n\n  const onHandelClickImg = (index, fileList) => {\n    if (typeof onClickImgItem == 'function') {\n      onClickImgItem(fileList[index], index);\n    }\n  };\n\n  const handleAppClickImage = index => {\n    return () => {\n      const targetItem = photoList[index];\n\n      if (typeof onClickImgItem == 'function') {\n        onClickImgItem({\n          uri: targetItem.uri,\n          url: targetItem.url,\n          headUrl: targetItem.headUrl,\n          type: targetItem.type,\n          active: true\n        }, index);\n      }\n    };\n  };\n\n  const handleRemovePhoto = index => {\n    return event => {\n      event.stopPropagation();\n      setPhotoList(p => {\n        const newP = p.filter((_, i) => index !== i);\n\n        if (typeof onChange === 'function') {\n          onChange(newP.map(item => {\n            return {\n              uri: item.uri,\n              url: item.url,\n              filename: item.filename,\n              type: item.type,\n              active: false,\n              width: item.width,\n              height: item.height\n            };\n          }));\n        }\n\n        return newP;\n      });\n    };\n  };\n\n  const renderPhotoList = () => {\n    return photoList.map((item, index) => {\n      return __jsx(\"li\", {\n        key: item.uri,\n        className: styles['image-list-item'],\n        onClick: handleAppClickImage(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, __jsx(\"section\", {\n        className: styles['image-list-item-remove-button'],\n        onClick: handleRemovePhoto(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"icon-font uniE907\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      })), item.type !== 1 ? __jsx(\"span\", {\n        className: `${styles['image-list-item-play-button']} icon-font uniE909`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }) : null, item.type !== 1 ? __jsx(\"video\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, __jsx(\"source\", {\n        src: item.headUrl,\n        type: \"video/mp4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      })) : __jsx(\"img\", {\n        src: item.url,\n        alt: `thread-photo-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }));\n    });\n  };\n\n  const handleOpenAlbum = () => {\n    if (isApp) {\n      window.ReactNativeWebView.postMessage(JSON.stringify({\n        action: 'openAlbum',\n        data: {\n          photoList\n        }\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles['image-picker-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    className: styles['image-list-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, isApp ? __jsx(React.Fragment, null, renderPhotoList(), photoList.length < 9 ? __jsx(\"li\", {\n    className: styles['image-upload-item'],\n    onClick: handleOpenAlbum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"icon-font uniE905\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    className: styles['image-upload'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Upload\")) : null) : __jsx(ImagePicker, {\n    length: \"3\",\n    files: photoList,\n    onChange: changeImgList,\n    onImageClick: onHandelClickImg,\n    selectable: photoList.length < 9,\n    accept: \"image/*,video/*\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default PublishImagePicker;","map":null,"metadata":{},"sourceType":"module"}