{"ast":null,"code":"export default class CancellablePromise {\n  constructor(promise) {\n    this.isCanceled = false;\n    this.promise = null;\n    const wrappedPromise = new Promise((resolve, reject) => {\n      promise.then(value => this.isCanceled ? reject({\n        isCanceled: this.isCanceled,\n        value\n      }) : resolve(value), error => reject({\n        isCanceled: this.isCanceled,\n        error\n      }));\n    });\n    this.promise = wrappedPromise;\n  }\n\n  cancel() {\n    this.isCanceled = true;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}