{"ast":null,"code":"var _jsxFileName = \"D:\\\\otoProject\\\\workspace\\\\otoloka-mobile-forum\\\\components\\\\category-list\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport './index.scss';\nimport BScroll from 'better-scroll';\nimport Link from 'next/link';\n\nconst CategoryList = ({\n  categoryList\n}) => {\n  const listElement = useRef();\n  const underlineElement = useRef();\n  const {\n    0: underLineLeft,\n    1: setUnderLineLeft\n  } = useState(0);\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const scrollInstance = useRef(null);\n  useEffect(() => {\n    return () => {\n      if (!!scrollInstance.current) {\n        scrollInstance.current.destroy();\n        scrollInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (scrollInstance.current === null) {\n      if (categoryList.length > 0) {\n        let categoryItemIndex = -1;\n        let flag = false;\n        const categoryListElement = document.querySelectorAll('.category-list-component .category-list-item .category-item-underline');\n        categoryListElement.forEach((item, index) => {\n          const categoryItem = categoryList[index];\n          categoryItem.underlineLeft = item.getBoundingClientRect().x;\n\n          if (categoryItem.active === true) {\n            setUnderLineLeft(categoryItem.underlineLeft);\n            flag = true;\n            categoryItemIndex = index;\n          }\n        });\n        scrollInstance.current = new BScroll('#category-list-component', {\n          probeType: 0,\n          bounce: false,\n          bounceTime: 0,\n          pullDownRefresh: false,\n          pullUpLoad: false,\n          observeDOM: false,\n          useTransition: false,\n          click: true,\n          scrollX: true,\n          scrollY: false\n        });\n\n        if (categoryItemIndex > 0) {\n          scrollInstance.current.scrollToElement('.category-list-item.active', 0, -20);\n        }\n\n        if (flag === false) {\n          setUnderLineLeft(-10000);\n        }\n\n        setTimeout(() => {\n          setIsLoaded(true);\n        });\n      }\n    } else {\n      setTimeout(() => {\n        const findItem = categoryList.find(item => item.active);\n        setUnderLineLeft(findItem.underlineLeft);\n        let categoryItemIndex = findItem.id;\n\n        if (categoryItemIndex > 0) {\n          scrollInstance.current.scrollToElement('.category-list-item.active', 0, -20);\n        }\n\n        scrollInstance.current.refresh();\n      });\n    }\n  }, [categoryList]);\n  return __jsx(\"div\", {\n    className: `category-list-component ${isLoaded ? 'loaded' : ''}`,\n    ref: listElement,\n    id: \"category-list-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"category-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"category-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, categoryList.map((item, index) => __jsx(\"li\", {\n    className: `category-list-item ${item.active ? 'active' : ''}`,\n    key: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: `/forum/${item.value}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"hidden-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, item.label), __jsx(\"span\", {\n    className: \"display-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, item.label), __jsx(\"div\", {\n    className: \"category-item-underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  })))))), __jsx(\"div\", {\n    className: \"underline\",\n    ref: underlineElement,\n    style: {\n      transform: `translateX(${underLineLeft}px)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CategoryList;","map":null,"metadata":{},"sourceType":"module"}