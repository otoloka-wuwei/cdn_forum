{"ast":null,"code":"var _jsxFileName = \"D:\\\\otoProject\\\\workspace\\\\otoloka-mobile-forum\\\\components\\\\swiper-video\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport './index.scss';\nimport VideoLoading from '../video-loading';\n\nconst SwiperVideo = ({\n  click = false,\n  data,\n  onBufferStatusChange,\n  muted,\n  autoPlay,\n  onPlay,\n  loading = false,\n  onPause\n}) => {\n  const checkInterval = useRef(50.0);\n  const lastPlayPos = useRef(0);\n  const currentPlayPos = useRef(0);\n  const bufferingDetected = useRef(false);\n  const {\n    0: canPlay,\n    1: setCanPlay\n  } = useState(false);\n  const {\n    0: showLoading,\n    1: setShowLoading\n  } = useState(false);\n  const videoPlayer = useRef();\n  const {\n    0: videoActive,\n    1: setVideoActive\n  } = useState(data.videoActive);\n  const timer = useRef();\n  useEffect(() => {\n    return () => {\n      if (!!timer.current) {\n        clearInterval(timer.current);\n      }\n    };\n  }, []);\n\n  const handelPlay = () => {\n    setVideoActive(true);\n\n    if (typeof onPlay === 'function') {\n      onPlay();\n    }\n\n    if (!timer.current) {\n      timer.current = setInterval(checkBuffering, checkInterval.current);\n    }\n  };\n\n  const handelPause = () => {\n    setVideoActive(false);\n\n    if (typeof onPause === 'function') {\n      onPause();\n    }\n  };\n\n  const handleChangeVideoPlayState = event => {\n    if (click) {\n      event.stopPropagation();\n\n      if (videoPlayer.current.paused) {\n        videoPlayer.current.play();\n        setVideoActive(true);\n      } else {\n        videoPlayer.current.pause();\n        setVideoActive(false);\n      }\n    }\n  };\n\n  const checkBuffering = () => {\n    currentPlayPos.current = videoPlayer.current.currentTime; // checking offset should be at most the check interval\n    // but allow for some margin\n\n    var offset = (checkInterval.current - 20) / 1000; // if no buffering is currently detected,\n    // and the position does not seem to increase\n    // and the player isn't manually paused...\n\n    if (!bufferingDetected.current && currentPlayPos.current < lastPlayPos.current + offset && !videoPlayer.current.paused) {\n      console.log('buffering');\n      bufferingDetected.current = true;\n\n      if (typeof onBufferStatusChange === 'function') {\n        onBufferStatusChange(bufferingDetected.current);\n      }\n    } // if we were buffering but the player has advanced,\n    // then there is no buffering\n\n\n    if (bufferingDetected.current && currentPlayPos.current > lastPlayPos.current + offset && !videoPlayer.current.paused) {\n      console.log('not buffering anymore');\n      bufferingDetected.current = false;\n\n      if (typeof onBufferStatusChange === 'function') {\n        onBufferStatusChange(bufferingDetected.current);\n      }\n    }\n\n    lastPlayPos.current = currentPlayPos.current;\n  };\n\n  const handleCanplay = () => {\n    setCanPlay(true);\n\n    if (showLoading === true) {\n      setShowLoading(false);\n    }\n  };\n\n  const handleLoadStart = () => {\n    if (loading === true) {\n      setShowLoading(true);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"swiper-video-component\",\n    onClick: handleChangeVideoPlayState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, showLoading ? __jsx(\"div\", {\n    className: \"loading-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(VideoLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  })) : null, __jsx(\"video\", {\n    className: \"single-videos\",\n    muted: muted,\n    poster: data.headUrl,\n    onPause: handelPause,\n    onPlay: handelPlay,\n    onCanPlay: handleCanplay,\n    autoPlay: autoPlay,\n    onLoadStart: handleLoadStart,\n    preload: \"auto\",\n    ref: videoPlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, __jsx(\"source\", {\n    src: data.url,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), videoActive ? null : __jsx(\"i\", {\n    className: \"video-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"icon-font uniE909\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default SwiperVideo;","map":null,"metadata":{},"sourceType":"module"}