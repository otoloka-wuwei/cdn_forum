{"ast":null,"code":"var _jsxFileName = \"D:\\\\otoProject\\\\workspace\\\\otoloka-mobile-forum\\\\components\\\\threads-item-image-list\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport PlaceHolderImage from '../../static/images/pleaceholder.svg';\nimport BigPleaceholder from '../../static/images/big-pleaceholder.svg';\nimport Video from '../video';\n\nconst ThreadsItemImageList = ({\n  data\n}) => {\n  const calcArticleItem = data => {\n    if (data) {\n      const imageList = data.urls;\n      const len = imageList.length;\n\n      if (len <= 0) {\n        return null;\n      } else if (len === 1) {\n        return __jsx(ArticleItemSingleImage, {\n          data: data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }\n        });\n      } else if (len > 1 && len <= 3) {\n        return __jsx(ArticleItemSomeImage, {\n          data: data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 16\n          }\n        });\n      } else if (len > 3) {\n        return __jsx(ArticleItemMuchImage, {\n          data: data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }\n        });\n      }\n    } else {\n      return null;\n    }\n  };\n\n  const ArticleItemSingleImage = ({\n    data\n  }) => {\n    const {\n      0: thumbnail,\n      1: setThumbnail\n    } = useState(data ? data.urls[0].url || BigPleaceholder : BigPleaceholder);\n    const type = data.urls[0].type;\n    const item = data.urls[0];\n    const {\n      0: videoHieght,\n      1: setVideoHeight\n    } = useState(0);\n    useEffect(() => {\n      if (!!data) {\n        const {\n          width,\n          height\n        } = data.urls[0];\n\n        if (type === 2) {\n          const {\n            remSize\n          } = window;\n          setVideoHeight(height / width * remSize * 3.28);\n        }\n      }\n    }, [data]);\n    return __jsx(\"div\", {\n      className: \"article-item-single-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, type === 1 ? __jsx(\"div\", {\n      className: \"single-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      className: \"thumbnail\",\n      src: thumbnail,\n      onError: () => setThumbnail(BigPleaceholder),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })) : __jsx(\"div\", {\n      className: \"video-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(Video, {\n      width: \"100%\",\n      height: videoHieght,\n      data: data.urls[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const ArticleItemSomeImage = ({\n    data\n  }) => {\n    const imageList = data.urls;\n    return __jsx(\"ul\", {\n      className: \"article-item-some-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, imageList.map((item, index) => __jsx(\"li\", {\n      className: \"some-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, item.type === 1 ? __jsx(\"div\", {\n      className: \"some-item-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      className: \"thumbnail\",\n      src: item.url,\n      onError: () => item.url = PlaceHolderImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    })) : __jsx(\"div\", {\n      className: \"some-item-span videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, item.headUrl.includes('#t=1') ? __jsx(Video, {\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }) : __jsx(React.Fragment, null, __jsx(\"img\", {\n      className: \"thumbnail\",\n      src: item.headUrl,\n      onError: () => {\n        item.headUrl = PlaceHolderImage;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), __jsx(\"i\", {\n      className: \"video-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-font uniE909\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    })))))));\n  };\n\n  const ArticleItemMuchImage = ({\n    data\n  }) => {\n    const imageList = data.urls;\n    const leftCount = imageList.length - 3;\n    return __jsx(\"ul\", {\n      className: \"article-item-much-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, imageList.map((item, index) => index < 3 ? __jsx(\"li\", {\n      className: \"much-item\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, item.type === 1 ? __jsx(\"div\", {\n      className: \"much-item-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      className: \"thumbnail\",\n      src: item.url,\n      onError: () => item.url = PlaceHolderImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    })) : __jsx(\"div\", {\n      className: \"much-item-span videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, item.headUrl.includes('#t=1') ? __jsx(Video, {\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }) : __jsx(React.Fragment, null, __jsx(\"img\", {\n      className: \"thumbnail\",\n      src: item.headUrl,\n      onError: () => item.headUrl = PlaceHolderImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }), __jsx(\"i\", {\n      className: \"video-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, __jsx(\"i\", {\n      className: \"icon-font uniE909\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }))))) : null), __jsx(\"div\", {\n      className: \"much-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, \"+\", leftCount));\n  };\n\n  return __jsx(\"ul\", {\n    className: \"threads-item-image-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, __jsx(\"li\", {\n    className: \"threads-item-image-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, calcArticleItem(data)));\n};\n\nexport default ThreadsItemImageList;","map":null,"metadata":{},"sourceType":"module"}